spring:
  application:
    name: video-catalog-service
  threads:
    virtual:
      enabled: true
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9094}
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: catalog-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"

  datasource:
    url: jdbc:mysql://localhost:3306/user_database?createDatabaseIfNotExist=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:a}
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true

minio:
  endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:admin}
  secret-key: ${MINIO_SECRET_KEY:admin}

kafka:
  bootstrap-url: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9094}
